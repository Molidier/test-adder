/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* cells_not_processed =  1  *)
(* src = "fetch_unit.v:35" *)
module branch_logic(address, instruction, last_alu_result, done, new_pc);
  (* src = "fetch_unit.v:58" *)
  wire [7:0] _000_;
  (* src = "fetch_unit.v:58" *)
  wire [7:0] _001_;
  (* src = "fetch_unit.v:58" *)
  wire [7:0] _002_;
  (* src = "fetch_unit.v:58" *)
  wire [7:0] _003_;
  (* src = "fetch_unit.v:66" *)
  (* unused_bits = "8" *)
  wire [31:0] _004_;
  wire [7:0] _005_;
  wire [3:0] _006_;
  wire [1:0] _007_;
  wire [7:0] _008_;
  wire [3:0] _009_;
  wire [1:0] _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire [7:0] _020_;
  wire [3:0] _021_;
  wire [1:0] _022_;
  wire _023_;
  wire _024_;
  wire [1:0] _025_;
  wire [15:0] _026_;
  wire [15:0] _027_;
  wire [1:0] _028_;
  wire [1:0] _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:432" *)
  wire [23:0] _038_;
  (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:428" *)
  wire [7:0] _039_;
  (* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:203" *)
  (* unused_bits = "7" *)
  wire [31:0] _040_;
  (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *)
  wire _041_;
  (* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:222" *)
  wire _042_;
  (* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:222" *)
  wire _043_;
  (* src = "fetch_unit.v:36" *)
  input [7:0] address;
  (* src = "fetch_unit.v:51" *)
  wire [1:0] branch_cond;
  (* src = "fetch_unit.v:39" *)
  input done;
  (* src = "fetch_unit.v:53" *)
  wire [1:0] format;
  (* src = "fetch_unit.v:52" *)
  wire [7:0] immediate;
  (* src = "fetch_unit.v:37" *)
  input [15:0] instruction;
  (* src = "fetch_unit.v:38" *)
  input [15:0] last_alu_result;
  (* src = "fetch_unit.v:40" *)
  output [7:0] new_pc;
  assign _030_ = instruction[0] |(* src = "fetch_unit.v:59" *)  _025_[1];
  assign _005_[0] = _026_[0] |(* src = "fetch_unit.v:70" *)  last_alu_result[1];
  assign _006_[0] = _005_[0] |(* src = "fetch_unit.v:70" *)  _005_[1];
  assign _007_[0] = _006_[0] |(* src = "fetch_unit.v:70" *)  _006_[1];
  assign _031_ = _007_[0] |(* src = "fetch_unit.v:70" *)  _007_[1];
  assign _008_[0] = last_alu_result[0] |(* src = "fetch_unit.v:78" *)  _027_[1];
  assign _005_[1] = last_alu_result[2] |(* src = "fetch_unit.v:78" *)  last_alu_result[3];
  assign _005_[2] = last_alu_result[4] |(* src = "fetch_unit.v:78" *)  last_alu_result[5];
  assign _005_[3] = last_alu_result[6] |(* src = "fetch_unit.v:78" *)  last_alu_result[7];
  assign _005_[4] = last_alu_result[8] |(* src = "fetch_unit.v:78" *)  last_alu_result[9];
  assign _005_[5] = last_alu_result[10] |(* src = "fetch_unit.v:78" *)  last_alu_result[11];
  assign _005_[6] = last_alu_result[12] |(* src = "fetch_unit.v:78" *)  last_alu_result[13];
  assign _005_[7] = last_alu_result[14] |(* src = "fetch_unit.v:78" *)  last_alu_result[15];
  assign _009_[0] = _008_[0] |(* src = "fetch_unit.v:78" *)  _005_[1];
  assign _006_[1] = _005_[2] |(* src = "fetch_unit.v:78" *)  _005_[3];
  assign _006_[2] = _005_[4] |(* src = "fetch_unit.v:78" *)  _005_[5];
  assign _006_[3] = _005_[6] |(* src = "fetch_unit.v:78" *)  _005_[7];
  assign _010_[0] = _009_[0] |(* src = "fetch_unit.v:78" *)  _006_[1];
  assign _007_[1] = _006_[2] |(* src = "fetch_unit.v:78" *)  _006_[3];
  assign _032_ = _010_[0] |(* src = "fetch_unit.v:78" *)  _007_[1];
  assign _033_ = instruction[2] |(* src = "fetch_unit.v:77|fetch_unit.v:60" *)  _028_[1];
  assign _034_ = _029_[0] |(* src = "fetch_unit.v:69|fetch_unit.v:60" *)  instruction[3];
  assign _011_ = _038_[5] |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[13];
  assign _039_[5] = _011_ |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[21];
  assign _012_ = _038_[7] |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[15];
  assign _039_[7] = _012_ |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[23];
  assign _013_ = _038_[6] |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[14];
  assign _039_[6] = _013_ |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[22];
  assign _014_ = _038_[4] |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[12];
  assign _039_[4] = _014_ |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[20];
  assign _015_ = _038_[3] |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[11];
  assign _039_[3] = _015_ |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[19];
  assign _016_ = _038_[2] |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[10];
  assign _039_[2] = _016_ |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[18];
  assign _017_ = _038_[1] |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[9];
  assign _039_[1] = _017_ |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[17];
  assign _018_ = _038_[0] |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[8];
  assign _039_[0] = _018_ |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:441" *)  _038_[16];
  assign _019_ = _035_ |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *)  _036_;
  assign _041_ = _019_ |(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *)  _037_;
  assign _020_[0] = last_alu_result[0] |(* src = "fetch_unit.v:62" *)  last_alu_result[1];
  assign _021_[0] = _020_[0] |(* src = "fetch_unit.v:62" *)  _005_[1];
  assign _022_[0] = _021_[0] |(* src = "fetch_unit.v:62" *)  _006_[1];
  assign _023_ = _022_[0] |(* src = "fetch_unit.v:62" *)  _007_[1];
  assign _024_ = instruction[2] |(* src = "fetch_unit.v:61|fetch_unit.v:60" *)  instruction[3];
  assign _037_ = ~(* src = "fetch_unit.v:61|fetch_unit.v:60" *) _024_;
  assign _035_ = ~(* src = "fetch_unit.v:77|fetch_unit.v:60" *) _033_;
  assign _036_ = ~(* src = "fetch_unit.v:69|fetch_unit.v:60" *) _034_;
  assign _003_[0] = _032_ ? (* src = "fetch_unit.v:78" *) _004_[0] : instruction[4];
  assign _003_[1] = _032_ ? (* src = "fetch_unit.v:78" *) _004_[1] : instruction[5];
  assign _003_[2] = _032_ ? (* src = "fetch_unit.v:78" *) _004_[2] : instruction[6];
  assign _003_[3] = _032_ ? (* src = "fetch_unit.v:78" *) _004_[3] : instruction[7];
  assign _003_[4] = _032_ ? (* src = "fetch_unit.v:78" *) _004_[4] : instruction[8];
  assign _003_[5] = _032_ ? (* src = "fetch_unit.v:78" *) _004_[5] : instruction[9];
  assign _003_[6] = _032_ ? (* src = "fetch_unit.v:78" *) _004_[6] : instruction[10];
  assign _003_[7] = _032_ ? (* src = "fetch_unit.v:78" *) _004_[7] : instruction[11];
  assign _002_[0] = _031_ ? (* src = "fetch_unit.v:70" *) _004_[0] : instruction[4];
  assign _002_[1] = _031_ ? (* src = "fetch_unit.v:70" *) _004_[1] : instruction[5];
  assign _002_[2] = _031_ ? (* src = "fetch_unit.v:70" *) _004_[2] : instruction[6];
  assign _002_[3] = _031_ ? (* src = "fetch_unit.v:70" *) _004_[3] : instruction[7];
  assign _002_[4] = _031_ ? (* src = "fetch_unit.v:70" *) _004_[4] : instruction[8];
  assign _002_[5] = _031_ ? (* src = "fetch_unit.v:70" *) _004_[5] : instruction[9];
  assign _002_[6] = _031_ ? (* src = "fetch_unit.v:70" *) _004_[6] : instruction[10];
  assign _002_[7] = _031_ ? (* src = "fetch_unit.v:70" *) _004_[7] : instruction[11];
  assign _001_[0] = _023_ ? (* src = "fetch_unit.v:62" *) _004_[0] : instruction[4];
  assign _001_[1] = _023_ ? (* src = "fetch_unit.v:62" *) _004_[1] : instruction[5];
  assign _001_[2] = _023_ ? (* src = "fetch_unit.v:62" *) _004_[2] : instruction[6];
  assign _001_[3] = _023_ ? (* src = "fetch_unit.v:62" *) _004_[3] : instruction[7];
  assign _001_[4] = _023_ ? (* src = "fetch_unit.v:62" *) _004_[4] : instruction[8];
  assign _001_[5] = _023_ ? (* src = "fetch_unit.v:62" *) _004_[5] : instruction[9];
  assign _001_[6] = _023_ ? (* src = "fetch_unit.v:62" *) _004_[6] : instruction[10];
  assign _001_[7] = _023_ ? (* src = "fetch_unit.v:62" *) _004_[7] : instruction[11];
  assign new_pc[0] = _030_ ? (* src = "fetch_unit.v:59" *) _004_[0] : _000_[0];
  assign new_pc[1] = _030_ ? (* src = "fetch_unit.v:59" *) _004_[1] : _000_[1];
  assign new_pc[2] = _030_ ? (* src = "fetch_unit.v:59" *) _004_[2] : _000_[2];
  assign new_pc[3] = _030_ ? (* src = "fetch_unit.v:59" *) _004_[3] : _000_[3];
  assign new_pc[4] = _030_ ? (* src = "fetch_unit.v:59" *) _004_[4] : _000_[4];
  assign new_pc[5] = _030_ ? (* src = "fetch_unit.v:59" *) _004_[5] : _000_[5];
  assign new_pc[6] = _030_ ? (* src = "fetch_unit.v:59" *) _004_[6] : _000_[6];
  assign new_pc[7] = _030_ ? (* src = "fetch_unit.v:59" *) _004_[7] : _000_[7];
  assign _000_[0] = _041_ ? (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *) _039_[0] : _004_[0];
  assign _000_[1] = _041_ ? (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *) _039_[1] : _004_[1];
  assign _000_[2] = _041_ ? (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *) _039_[2] : _004_[2];
  assign _000_[3] = _041_ ? (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *) _039_[3] : _004_[3];
  assign _000_[4] = _041_ ? (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *) _039_[4] : _004_[4];
  assign _000_[5] = _041_ ? (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *) _039_[5] : _004_[5];
  assign _000_[6] = _041_ ? (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *) _039_[6] : _004_[6];
  assign _000_[7] = _041_ ? (* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:445" *) _039_[7] : _004_[7];
  assign _025_[1] = instruction[1] ^(* src = "fetch_unit.v:59" *)  1'h1;
  assign _026_[0] = last_alu_result[0] ^(* src = "fetch_unit.v:70" *)  1'h1;
  assign _027_[1] = last_alu_result[1] ^(* src = "fetch_unit.v:78" *)  1'h1;
  assign _028_[1] = instruction[3] ^(* src = "fetch_unit.v:77|fetch_unit.v:60" *)  1'h1;
  assign _029_[0] = instruction[2] ^(* src = "fetch_unit.v:69|fetch_unit.v:60" *)  1'h1;
  assign _038_[16] = _001_[0] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _037_;
  assign _038_[17] = _001_[1] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _037_;
  assign _038_[18] = _001_[2] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _037_;
  assign _038_[19] = _001_[3] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _037_;
  assign _038_[20] = _001_[4] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _037_;
  assign _038_[21] = _001_[5] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _037_;
  assign _038_[22] = _001_[6] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _037_;
  assign _038_[23] = _001_[7] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _037_;
  assign _038_[8] = _002_[0] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _036_;
  assign _038_[9] = _002_[1] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _036_;
  assign _038_[10] = _002_[2] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _036_;
  assign _038_[11] = _002_[3] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _036_;
  assign _038_[12] = _002_[4] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _036_;
  assign _038_[13] = _002_[5] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _036_;
  assign _038_[14] = _002_[6] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _036_;
  assign _038_[15] = _002_[7] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _036_;
  assign _038_[0] = _003_[0] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _035_;
  assign _038_[1] = _003_[1] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _035_;
  assign _038_[2] = _003_[2] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _035_;
  assign _038_[3] = _003_[3] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _035_;
  assign _038_[4] = _003_[4] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _035_;
  assign _038_[5] = _003_[5] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _035_;
  assign _038_[6] = _003_[6] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _035_;
  assign _038_[7] = _003_[7] &(* src = "fetch_unit.v:77|fetch_unit.v:60|<techmap.v>:434" *)  _035_;
  assign _004_[1] = address[1] ^(* src = "fetch_unit.v:91|<techmap.v>:263" *)  address[0];
  assign _004_[2] = address[2] ^(* src = "fetch_unit.v:91|<techmap.v>:263" *)  _040_[1];
  assign _004_[3] = address[3] ^(* src = "fetch_unit.v:91|<techmap.v>:263" *)  _040_[2];
  assign _004_[4] = address[4] ^(* src = "fetch_unit.v:91|<techmap.v>:263" *)  _040_[3];
  assign _004_[5] = address[5] ^(* src = "fetch_unit.v:91|<techmap.v>:263" *)  _040_[4];
  assign _004_[6] = address[6] ^(* src = "fetch_unit.v:91|<techmap.v>:263" *)  _040_[5];
  assign _004_[7] = address[7] ^(* src = "fetch_unit.v:91|<techmap.v>:263" *)  _040_[6];
  assign _004_[0] = address[0] ^(* src = "fetch_unit.v:91|<techmap.v>:262" *)  1'h1;
  assign _040_[1] = address[1] &(* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:221" *)  address[0];
  assign _040_[3] = _042_ &(* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:221" *)  _040_[1];
  assign _042_ = address[3] &(* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:222" *)  address[2];
  assign _043_ = address[5] &(* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:222" *)  address[4];
  assign _040_[5] = _043_ &(* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:229" *)  _040_[3];
  assign _040_[2] = address[2] &(* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:229" *)  _040_[1];
  assign _040_[4] = address[4] &(* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:229" *)  _040_[3];
  assign _040_[6] = address[6] &(* src = "fetch_unit.v:91|<techmap.v>:260|<techmap.v>:229" *)  _040_[5];
  assign _004_[31:9] = 23'h000000;
  assign _008_[7:1] = _005_[7:1];
  assign _009_[3:1] = _006_[3:1];
  assign _010_[1] = _007_[1];
  assign _020_[7:1] = _005_[7:1];
  assign _021_[3:1] = _006_[3:1];
  assign _022_[1] = _007_[1];
  assign _025_[0] = instruction[0];
  assign _026_[15:1] = last_alu_result[15:1];
  assign { _027_[15:2], _027_[0] } = { last_alu_result[15:2], last_alu_result[0] };
  assign _028_[0] = instruction[2];
  assign _029_[1] = instruction[3];
  assign { _040_[31:7], _040_[0] } = { 24'h000000, _004_[8], address[0] };
  assign branch_cond = instruction[3:2];
  assign format = instruction[1:0];
  assign immediate = instruction[11:4];
endmodule

(* cells_not_processed =  1  *)
(* src = "fetch_unit.v:2" *)
module memory(clk, addr, out);
  (* src = "fetch_unit.v:12" *)
  wire [15:0] _00_;
  (* src = "fetch_unit.v:4" *)
  input [7:0] addr;
  (* src = "fetch_unit.v:3" *)
  input clk;
  (* src = "fetch_unit.v:5" *)
  output [15:0] out;
  reg [15:0] out;
  (* src = "fetch_unit.v:7" *)
  reg [15:0] memory_array [255:0];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[0] <= _00_[0];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[1] <= _00_[1];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[2] <= _00_[2];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[3] <= _00_[3];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[4] <= _00_[4];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[5] <= _00_[5];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[6] <= _00_[6];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[7] <= _00_[7];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[8] <= _00_[8];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[9] <= _00_[9];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[10] <= _00_[10];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[11] <= _00_[11];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[12] <= _00_[12];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[13] <= _00_[13];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[14] <= _00_[14];
  (* src = "fetch_unit.v:12" *)
  always @(posedge clk)
      out[15] <= _00_[15];
  (* src = "fetch_unit.v:9" *)
initial begin
    memory_array[0]  = 16'h0068;
    memory_array[1]  = 16'h4264;
    memory_array[2]  = 16'h1c64;
    memory_array[3]  = 16'h0000;
    memory_array[4]  = 16'h28a6;
    memory_array[5]  = 16'h1c21;
    memory_array[6]  = 16'h4100;
    memory_array[7]  = 16'h7a28;
    memory_array[8]  = 16'h1c40;
    memory_array[9]  = 16'ha120;
    memory_array[10] = 16'h0061;
end

  (* src = "fetch_unit.v:13" *)
wire [15:0] _00_;  // Assuming WIDTH=16, so _00_ is a 16-bit wide wire

assign _00_ = memory_array[addr];

endmodule

(* cells_not_processed =  1  *)
(* src = "fetch_unit.v:17" *)
module pc(clk, en_pc, reset, d_in, d_out);
  (* src = "fetch_unit.v:25" *)
  wire [7:0] _00_;
  wire [7:0] _01_;
  (* src = "fetch_unit.v:18" *)
  input clk;
  (* src = "fetch_unit.v:21" *)
  input [7:0] d_in;
  (* src = "fetch_unit.v:22" *)
  output [7:0] d_out;
  reg [7:0] d_out;
  (* src = "fetch_unit.v:19" *)
  input en_pc;
  (* src = "fetch_unit.v:20" *)
  input reset;
  assign _00_[0] = reset ? (* src = "fetch_unit.v:26" *) 1'h0 : _01_[0];
  assign _00_[1] = reset ? (* src = "fetch_unit.v:26" *) 1'h0 : _01_[1];
  assign _00_[2] = reset ? (* src = "fetch_unit.v:26" *) 1'h0 : _01_[2];
  assign _00_[3] = reset ? (* src = "fetch_unit.v:26" *) 1'h0 : _01_[3];
  assign _00_[4] = reset ? (* src = "fetch_unit.v:26" *) 1'h0 : _01_[4];
  assign _00_[5] = reset ? (* src = "fetch_unit.v:26" *) 1'h0 : _01_[5];
  assign _00_[6] = reset ? (* src = "fetch_unit.v:26" *) 1'h0 : _01_[6];
  assign _00_[7] = reset ? (* src = "fetch_unit.v:26" *) 1'h0 : _01_[7];
  assign _01_[0] = en_pc ? (* src = "fetch_unit.v:28" *) d_in[0] : d_out[0];
  assign _01_[1] = en_pc ? (* src = "fetch_unit.v:28" *) d_in[1] : d_out[1];
  assign _01_[2] = en_pc ? (* src = "fetch_unit.v:28" *) d_in[2] : d_out[2];
  assign _01_[3] = en_pc ? (* src = "fetch_unit.v:28" *) d_in[3] : d_out[3];
  assign _01_[4] = en_pc ? (* src = "fetch_unit.v:28" *) d_in[4] : d_out[4];
  assign _01_[5] = en_pc ? (* src = "fetch_unit.v:28" *) d_in[5] : d_out[5];
  assign _01_[6] = en_pc ? (* src = "fetch_unit.v:28" *) d_in[6] : d_out[6];
  assign _01_[7] = en_pc ? (* src = "fetch_unit.v:28" *) d_in[7] : d_out[7];
  (* src = "fetch_unit.v:25" *)
  always @(posedge clk)
      d_out[0] <= _00_[0];
  (* src = "fetch_unit.v:25" *)
  always @(posedge clk)
      d_out[1] <= _00_[1];
  (* src = "fetch_unit.v:25" *)
  always @(posedge clk)
      d_out[2] <= _00_[2];
  (* src = "fetch_unit.v:25" *)
  always @(posedge clk)
      d_out[3] <= _00_[3];
  (* src = "fetch_unit.v:25" *)
  always @(posedge clk)
      d_out[4] <= _00_[4];
  (* src = "fetch_unit.v:25" *)
  always @(posedge clk)
      d_out[5] <= _00_[5];
  (* src = "fetch_unit.v:25" *)
  always @(posedge clk)
      d_out[6] <= _00_[6];
  (* src = "fetch_unit.v:25" *)
  always @(posedge clk)
      d_out[7] <= _00_[7];
endmodule
